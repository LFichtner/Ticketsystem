//require('backend/functions.js');
// creates an unique id
function createUUID() {
    // http://www.ietf.org/rfc/rfc4122.txt
    var s = [];
    var hexDigits = "0123456789abcdef";
    for (var i = 0; i < 36; i++) {
           s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);
    }
    // bits 12-15 of the time_hi_and_version field to 0010
    s[14] = "4";
    // bits 6-7 of the clock_seq_hi_and_reserved to 01  
    s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);
    s[8] = s[13] = s[18] = s[23] = "-";

    var uuid = s.join("");
    return uuid;
};
var Session = require('backend/Session.js');

SessionManager = function () {
    var _that = this;
    this.uniqID = Math.random();
    this.ident = 'a string just for checking';
    
    var sessionObjs = [];
    
    this.getSessionIDByUserID = function (userID) {
        var i = 0;
        while (i < sessionObjs.length) {
            if (sessionObjs[i].getUserID() == userID ) {
                console.log('userID: ', sessionObjs[i].getUserID(), ' || sessionID: ', sessionObjs[i].getSessionID());
                return sessionObjs[i].getSessionID();
            }
            i++;
        };
        if (i >= sessionObjs.length) {
            return false;
        }
    };
    
    this.getUserIDBySessionID = function (sessionID) {
        var i = 0;
        while (i < sessionObjs.length) {
            if (sessionObjs[i].getSessionID() == sessionID) {
                return sessionObjs[i].getUserID();
            }
            i++;
        };
        if (i >= sessionObjs.length) {
            return false;
        }
    };
    
    this.createSession = function (userID) {
        if (userID) {
            var mySession = new Session(createUUID(), userID, Math.floor(Date.now() / 1000));
            sessionObjs.push(mySession);
            return mySession.getSessionID();
        }
        else {
            return false;
        }
    };

    this.removeSession = function (sessionID) {
        var i = 0;
        while (i < sessionObjs.length) {
            console.log(sessionObjs[i].getSessionID());
            if (sessionObjs[i].getSessionID() == sessionID ) {
                sessionObjs[i] = null;
                console.log('removing sessionObjs[' + i + ']: ');
                sessionObjs.splice(i, 1);
                return true;
            }
            i++;
        };
        return 'ERROR sessionID not found in array';
    };

    this.validateSession = function (sessionID) {
        var i = 0;
        while (i < sessionObjs.length) {
            if (sessionObjs[i].getSessionID() == sessionID) {
                if (Math.floor(Date.now() / 1000) - sessionObjs[i].getSessionTimestamp() < 9000) {
                    sessionObjs[i].setSessionTimestamp(Math.floor(Date.now() / 1000));
                    return true;
                }
                else {
                    console.log('removing sessionObjs[' + i + ']: ');
                    sessionObjs[i] = null;
                    sessionObjs.splice(i, 1);
                    return 'SM: ERROR Session expired';
                }
            }
            i++;
        }
        return 'SM: ERROR sessionID not found in array';
    };
};

//check if nodejs is running this code
try {
    module.exports = function () {
        return SessionManager;
    }();
} catch (e) {

}